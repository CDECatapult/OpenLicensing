op:chosenSequentially a op:AssetSetSamplePolicy,
        skos:Concept ;
    skos:inScheme op:AssetSetSamplePolicies ;
    skos:name "chosenSequentially"@en ;
    skos:narrowerThan op:anySamplePolicy ;
    dc:description "chosen according to a predefined order"@en .

op:pointingFrom a op:AssetSetEdgeDirection,
        skos:Concept ;
    skos:inScheme op:AssetSetEdgeDirections ;
    skos:name "pointingFrom"@en ;
    skos:narrowerThan op:anyEdgeDirection ;
    dc:description "Point from the element to the target_object"@en .

op:pointingTo a op:AssetSetEdgeDirection,
        skos:Concept ;
    skos:inScheme op:AssetSetEdgeDirections ;
    skos:name "pointingTo"@en ;
    skos:narrowerThan op:anyEdgeDirection ;
    dc:description "Point from the target_object to the element"@en .

op:randomlyChosen a op:AssetSetSamplePolicy,
        skos:Concept ;
    skos:inScheme op:AssetSetSamplePolicies ;
    skos:name "randomlyChosen"@en ;
    skos:narrowerThan op:anySamplePolicy ;
    dc:description "chosen in an arbitrary manner not controller by assignee or assigner"@en .

op:selectedByAssignee a op:AssetSetSamplePolicy,
        skos:Concept ;
    skos:inScheme op:AssetSetSamplePolicies ;
    skos:name "selectedByAssignee"@en ;
    skos:narrowerThan op:anySamplePolicy ;
    dc:description "chosen by the assignee party"@en .

op:selectedByAssigner a op:AssetSetSamplePolicy,
        skos:Concept ;
    skos:inScheme op:AssetSetSamplePolicies ;
    skos:name "selectedByAssigner"@en ;
    skos:narrowerThan op:anySamplePolicy ;
    dc:description "chosen by the assigner party"@en .

op:count a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
Default value is 1.
"""@en ;
    rdfs:domain op:AssetSelector ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range xsd:integer .

op:edgeDirection a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain op:AssetSet ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range op:AssetSetEdgeDirection ;
    dc:description """Indicates in which direction the predicate is used to connect elements to the set target_object.
        Default is op:pointingTo."""@en .

op:fromSet a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain op:AssetSelector ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range op:AssetSet ;
    dc:description """The set asset can be picked from."""@en .

op:hasElement a owl:ObjectProperty ;
    rdfs:domain op:AssetSet ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range owl:Thing .

op:predicate a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain op:AssetSet ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range owl:ObjectProperty ;
    dc:description """Indicates which predicate is used to Indicate that element belong to a set."""@en .

op:samplePolicy a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain op:AssetSelector ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range op:AssetSetSamplePolicy ;
    dc:description """The way asset are selected. Default is selected_by_assignee."""@en .


op:selectRequired a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:domain op:AssetSelector ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range xsd:boolean ;
    dc:description """True if it is required to select an element on agreement of the policy."""@en .

op:targetObject a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain op:AssetSet ;
    rdfs:isDefinedBy <http://openpermissions.org/ns/op/1.1/> ;
    rdfs:range owl:Thing ;
    dc:description """Indicates the entity that the elements must connect to through the predicate in order to be part of the set.
    Default is the AssetSet instance itself."""@en .

op:AssetSetEdgeDirections a skos:ConceptScheme ;
    skos:hasTopConcept op:anyEdgeDirection .

op:anyEdgeDirection a op:AssetSetEdgeDirection,
        skos:Concept ;
    skos:inScheme op:AssetSetEdgeDirections ;
    skos:name "anyEdgeDirection"@en .

op:AssetSelector a [ a owl:Restriction ;
            owl:cardinality 1 ;
            owl:onProperty op:selectRequired ],
        [ a owl:Restriction ;
            owl:allValuesFrom op:AssetSetSamplePolicy ;
            owl:cardinality 1 ;
            owl:onProperty op:samplePolicy ],
        [ a owl:Restriction ;
            owl:cardinality 1 ;
            owl:onProperty op:count ],
        [ a owl:Restriction ;
            owl:allValuesFrom op:AssetSet ;
            owl:cardinality 1 ;
            owl:onProperty op:fromSet ],
        owl:Class ;
    rdfs:label "AssetSelector"^^xsd:string ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf op:Asset ;
    dc:description """An asset that is actually sampled from a set.
    An AssetSetSample must indicate the set asset must be selected from, may contain a sample policy,  and may contain the number of assets that should be sampled."""@en .

op:AssetSetEdgeDirection a owl:Class ;
    rdfs:label "AssetSetEdgeDirection"^^xsd:string ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    dc:description """Indicates if the predicate used to connect the set to its elements, are "pointing to" the elements or "pointing from" the elements """@en .

op:AssetSetSamplePolicies a skos:ConceptScheme ;
    skos:hasTopConcept op:anySamplePolicy .

op:anySamplePolicy a op:AssetSetSamplePolicy,
        skos:Concept ;
    skos:inScheme op:AssetSetSamplePolicies ;
    skos:name "anySamplePolicy"@en .

op:AssetSet a [ a owl:Restriction ;
            owl:allValuesFrom owl:Thing ;
            owl:maxCardinality 1 ;
            owl:onProperty op:targetObject ],
        [ a owl:Restriction ;
            owl:allValuesFrom op:AssetSetEdgeDirection ;
            owl:maxCardinality 1 ;
            owl:onProperty op:edgeDirection ],
        [ a owl:Restriction ;
            owl:allValuesFrom owl:Thing ;
            owl:onProperty op:hasElement ],
        [ a owl:Restriction ;
            owl:allValuesFrom owl:ObjectProperty ;
            owl:maxCardinality 1 ;
            owl:onProperty op:predicate ],
        owl:Class ;
    rdfs:label "AssetSet"^^xsd:string ;
    dc:description """A set defined as the set of element pointing to a target object via a certain predicate."""@en,
        			"""A set or collection of elements of type elementType"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf op:Asset,
        op:AssetSet .

op:AssetSetSamplePolicy a owl:Class ;
    rdfs:label "AssetSetSamplePolicy"^^xsd:string ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    dc:description """Indicates the way sampling from a set is done. """@en .

