
# -----------------------------------------------------------------------
# WARNING: THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT DIRECTLY
# -----------------------------------------------------------------------

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3c.org/2008/skos/> .

@prefix id: <http://openlicensing.org/ns/id/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/> .

@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix geonames: <http://www.geonames.org/ontology#> .
@prefix gn: <http://www.geonames.org/ontology#> .

@prefix iso4217a: <http://cvx.iptc.org/iso4217a/> .
@prefix ol: <http://openlicensing.org/ns/ol/1.1/> .

@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix odrlcc: <https://www.w3.org/community/odrl/work/cc/> .

<http://openlicensing.org/ns/ol/1.1/> a owl:Ontology ;
# todo: whilst I want the whole dev team attributed I don't mind individually listing them.
    dc:creator "Digital Catapult Software Engineering Team"^^xsd:string;
    dc:description "OpenLicensing Extension (ODRL2.1/ OpenLicensing Profile)."^^xsd:string ;
    dct:modified "2015-02-22T10:56:00Z"^^xsd:dateTime ;
    dct:rights "(C) Digital Catapult Limited 2016"^^xsd:string ;
    owl:versionIRI <http://openlicensing.org/ns/ol/1.1/> ;
    owl:versionInfo "1.1.0"^^xsd:string .

# -----------------------------------------------------------------------
# asset.ttl
# -----------------------------------------------------------------------

ol:alsoIdentifiedBy a owl:ObjectProperty ;
    dc:description """
    An Asset may have different identifiers assigned to it by different parties.
    The identities are not necessarily equivalent even though they have been assigned to the same Asset.
    Each identity has a type, such as ISBN or EIDR and the type is semantically defined.
    Identities that alsoIdentifiedBy refer to MUST be for the whole Asset and not for part of the Asset.
    	For example if the Asset is a book, the alsoIdentifiedBy ids will be for the book and NOT for pictures in the book.
"""@en ;
    rdfs:domain ol:Asset ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:Id .

ol:title a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
Title of the asset for the purpose of presentation to a Licensee.
"""@en ;
    rdfs:domain ol:Asset ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf dc:title .

ol:Asset a [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:title ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Id ;
            owl:onProperty ol:alsoIdentifiedBy ],
        owl:Class ;
    rdfs:label "Asset"^^xsd:string ;
    dc:description """
An asset in ODRL is any object referred by a policy.

Here the asset generally represents the intellectual work.
Only metadata about the Asset that is required for the licensing of the Asset should be defined here.
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf odrl:Asset .

# -----------------------------------------------------------------------
# ids.ttl
# -----------------------------------------------------------------------

ol:HubkeyS0 a ol:IdType,
        skos:Concept ;
    dc:description "Id who has the form of a Hubkey.  This refers to schema 0 of the Hubkey."@en ;
    skos:inScheme ol:id_types ;
    skos:name "HubkeyS0"@en ;
    skos:narrowerThan ol:top_id_type .

ol:Hubkey a ol:IdType,
        skos:Concept ;
    dc:description "Id who has the form of a Hubkey.  This refers to the latest schema of a Hubkey."@en ;
    skos:inScheme ol:id_types ;
    skos:name "Hubkey"@en ;
    skos:narrowerThan ol:top_id_type .

ol:IRI a ol:IdType,
        skos:Concept ;
    dc:description "Id which has the form of an IRI"@en ;
    skos:inScheme ol:id_types ;
    skos:name "IRI"@en ;
    skos:narrowerThan ol:top_id_type .

ol:id_type a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain ol:Id ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:IdType .

ol:value a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:domain ol:Id ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string .

ol:Id a [ a owl:Restriction ;
            owl:cardinality 1 ;
            owl:onProperty ol:value ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:IdType ;
            owl:cardinality 1 ;
            owl:onProperty ol:id_type ],
        owl:Class ;
    rdfs:label "Id"^^xsd:string ;
    dc:description """
Identifier for an asset.
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> .

ol:id_types a skos:ConceptScheme ;
    skos:ConceptScheme_hasTopConcept ol:top_id_type .

ol:top_id_type a ol:IdType,
        skos:Concept ;
    skos:inScheme ol:id_types ;
    skos:name "top_id_type"@en .

ol:IdType a owl:Class ;
    rdfs:label "IdType"^^xsd:string ;
    dc:description """
Represents a class of identifiers
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> .


# -----------------------------------------------------------------------
# policy.ttl
# -----------------------------------------------------------------------


ol:policyText a owl:DatatypeProperty ;
    dc:description """The policy 'small print'"""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string .

# todo : would policyAuthor be better?
ol:defaultAssignee a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
                                 Implicit default assignee of a rule.
                                 """@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:Party .

ol:defaultAssigner a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
                                 Implicit default assigner of a rule.
                                 """@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:Party .

ol:defaultTarget a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
                                 Implicit default target of a rule.
                                 """@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:Asset .

ol:digitalPolicyAuthor a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
A field to allow the author of the digital policy - if available this person may be
eventually be contacted to obtain information about the policy.
"""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string .

ol:expires a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
Optional expiry date of the policy.
The policy is not considered valid after this date.
"""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:dateTime .

ol:policyDescription a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """A short description of the policy - usable to give a user rapidly information about the policy."""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf dc:description .

ol:sharedDuties a owl:ObjectProperty ;
    dc:description """
                                 Duties that are shared by all Permissions in this policy.
                                 """@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range odrl:Duty .

ol:Policy a [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:policyDescription ],
        [ a owl:Restriction ;
            owl:allValuesFrom odrl:Duty ;
            owl:onProperty ol:sharedDuties ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Party ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:defaultAssignee ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Asset ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:defaultTarget ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:expires ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:digitalPolicyAuthor ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Party ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:defaultAssigner ],
        owl:Class ;
    rdfs:label "Policy"^^xsd:string ;
    dc:description """
An ODRL policy representing an agreement or a potential agreement.

Policy is the central entity that holds an ODRL policy together. In its encoded form, e.g. in an XML document, it makes the policy addressable from the outside word via its uid attribute. Policy can refer to Permissions and Prohibitions.
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf odrl:Policy .


# -----------------------------------------------------------------------
# set.ttl
# -----------------------------------------------------------------------

# todo: we need to work through all of this

ol:chosen_sequentially a ol:AssetSetSelectorPolicy,
        skos:Concept ;
    dc:description "chosen according to a predefined order"@en ;
    skos:inScheme ol:AssetSetSelectorPolicies ;
    skos:name "chosen_sequentially"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:randomly_chosen a ol:AssetSetSelectorPolicy,
        skos:Concept ;
    dc:description "chosen in an arbitrary manner not controller by assignee or assigner"@en ;
    skos:inScheme ol:AssetSetSelectorPolicies ;
    skos:name "randomly_chosen"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:selected_by_assignee a ol:AssetSetSelectorPolicy,
        skos:Concept ;
    dc:description "chosen by the assignee party"@en ;
    skos:inScheme ol:AssetSetSelectorPolicies ;
    skos:name "selected_by_assignee"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:selected_by_assigner a ol:AssetSetSelectorPolicy,
        skos:Concept ;
    dc:description "chosen by the assigner party"@en ;
    skos:inScheme ol:AssetSetSelectorPolicies ;
    skos:name "selected_by_assigner"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:count a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """Default value is 1. A negative value -n can be used to mean "all the assets but n"."""@en ;
    rdfs:domain ol:AssetSetSelector ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:integer .

ol:fromSet a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """The set asset can be picked from."""@en ;
    rdfs:domain ol:AssetSetSelector ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:AssetSet .


ol:samplePolicy a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """The way asset are selected. Default is selected_by_assignee."""@en ;
    rdfs:domain ol:AssetSetSelector ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:AssetSetSelectorPolicy .


ol:AssetSetSelector a [ a owl:Restriction ;
            owl:allValuesFrom ol:AssetSet ;
            owl:cardinality 1 ;
            owl:onProperty ol:fromSet ],
        [ a owl:Restriction ;
            owl:cardinality 1 ;
            owl:onProperty ol:count ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:AssetSetSelectorPolicy ;
            owl:cardinality 1 ;
            owl:onProperty ol:samplePolicy ],
        owl:Class ;
    rdfs:label "AssetSetSelector"^^xsd:string ;
    dc:description """
An asset that is actually sampled from a set. An AssetSetSelector must indicate the set asset must be selected from, muay contain a sample policy,  and may contain the number of 
asset that must be sampled. 
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf ol:Asset .


ol:AssetSetSelectorPolicies a skos:ConceptScheme ;
    skos:ConceptScheme_hasTopConcept ol:any_sample_policy .

ol:any_sample_policy a ol:AssetSetSelectorPolicy,
        skos:Concept ;
    skos:inScheme ol:AssetSetSelectorPolicies ;
    skos:name "any_sample_policy"@en .

ol:AssetSet a owl:Class ;
    rdfs:label "AssetSet"^^xsd:string ;
    dc:description """A set defined as the set of element pointing to a target object via a certain predicate."""@en,
        """A set or collection of elements of type elementType"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf ol:Asset,
        ol:AssetSet .


ol:hasElement a owl:ObjectProperty ;
    rdfs:domain ol:AssetSet ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range owl:Thing .

        
ol:AssetSetSelectorPolicy a owl:Class ;
    rdfs:label "AssetSetSelectorPolicy"^^xsd:string ;
    dc:description """Indicates the way sampling from a set is done."""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> .

