
# -----------------------------------------------------------------------
# WARNING: THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT DIRECTLY
# -----------------------------------------------------------------------

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3c.org/2008/skos/> .

@prefix id: <http://openlicensing.org/ns/id/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/> .

@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix geonames: <http://www.geonames.org/ontology#> .
@prefix gn: <http://www.geonames.org/ontology#> .

@prefix iso4217a: <http://cvx.iptc.org/iso4217a/> .
@prefix ol: <http://openlicensing.org/ns/ol/1.1/> .

@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix odrlcc: <https://www.w3.org/community/odrl/work/cc/> .

<http://openlicensing.org/ns/ol/1.1/> a owl:Ontology ;
# todo: whilst I want the whole dev team attributed I don't mind individually listing them.
    dc:creator "Digital Catapult Software Engineering Team"^^xsd:string;
    dc:description "OpenLicensing Extension (ODRL2.1/ OpenLicensing Profile)."^^xsd:string ;
    dct:modified "2015-02-22T10:56:00Z"^^xsd:dateTime ;
    dct:rights "(C) Digital Catapult Limited 2016"^^xsd:string ;
    owl:versionIRI <http://openlicensing.org/ns/ol/1.1/> ;
    owl:versionInfo "1.1.0"^^xsd:string .

# -----------------------------------------------------------------------
# asset.ttl
# -----------------------------------------------------------------------

ol:alsoIdentifiedBy a owl:ObjectProperty ;
    dc:description """
    An Asset may have different identifiers assigned to it by different parties.
    The identities are not necessarily equivalent even though they have been assigned to the same Asset.
    Each identity has a type, such as ISBN or EIDR and the type is semantically defined.
    Identities that alsoIdentifiedBy refer to MUST be for the whole Asset and not for part of the Asset.
    	For example if the Asset is a book, the alsoIdentifiedBy ids will be for the book and NOT for pictures in the book.
"""@en ;
    rdfs:domain ol:Asset ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:Id .

ol:title a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
Title of the asset for the purpose of presentation to a Licensee.
"""@en ;
    rdfs:domain ol:Asset ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf dc:title .

ol:Asset a [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:title ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Id ;
            owl:onProperty ol:alsoIdentifiedBy ],
        owl:Class ;
    rdfs:label "Asset"^^xsd:string ;
    dc:description """
An asset in ODRL is any object referred by a policy.

Here the asset generally represents the intellectual work.
Only metadata about the Asset that is required for the licensing of the Asset should be defined here.
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf odrl:Asset .

# -----------------------------------------------------------------------
# ids.ttl
# -----------------------------------------------------------------------

ol:HubkeyS0 a ol:IdType,
        skos:Concept ;
    dc:description "Id who has the form of a Hubkey.  This refers to schema 0 of the Hubkey."@en ;
    skos:inScheme ol:id_types ;
    skos:name "HubkeyS0"@en ;
    skos:narrowerThan ol:top_id_type .

ol:Hubkey a ol:IdType,
        skos:Concept ;
    dc:description "Id who has the form of a Hubkey.  This refers to the latest schema of a Hubkey."@en ;
    skos:inScheme ol:id_types ;
    skos:name "Hubkey"@en ;
    skos:narrowerThan ol:top_id_type .

ol:IRI a ol:IdType,
        skos:Concept ;
    dc:description "Id which has the form of an IRI"@en ;
    skos:inScheme ol:id_types ;
    skos:name "IRI"@en ;
    skos:narrowerThan ol:top_id_type .

ol:id_type a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:domain ol:Id ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:IdType .

ol:value a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:domain ol:Id ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string .

ol:Id a [ a owl:Restriction ;
            owl:cardinality 1 ;
            owl:onProperty ol:value ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:IdType ;
            owl:cardinality 1 ;
            owl:onProperty ol:id_type ],
        owl:Class ;
    rdfs:label "Id"^^xsd:string ;
    dc:description """
Identifier for an asset.
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> .

ol:id_types a skos:ConceptScheme ;
    skos:ConceptScheme_hasTopConcept ol:top_id_type .

ol:top_id_type a ol:IdType,
        skos:Concept ;
    skos:inScheme ol:id_types ;
    skos:name "top_id_type"@en .

ol:IdType a owl:Class ;
    rdfs:label "IdType"^^xsd:string ;
    dc:description """
Represents a class of identifiers
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> .


# -----------------------------------------------------------------------
# party.ttl
# -----------------------------------------------------------------------

ol:name a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:domain ol:Party ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf dc:name .

ol:provider a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
origanisation_id of the organisation representing the party.
if no value is provider the party is the organisation itself
"""@en ;
    rdfs:domain ol:Party ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string .

ol:reference a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
An reference id used by the provider to actually identify the party
"""@en ;
    rdfs:domain ol:Party ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf dc:source .

ol:Party a [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:reference ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:provider ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:name ],
        owl:Class ;
    rdfs:label "Party"^^xsd:string ;
    dc:description """
A party represent:
  1. a legal person having duties and rights as part of agreements.
  2. a person known by an organisation (not necessarily providing its real name)

"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf ol:Asset,
        odrl:Party .


# -----------------------------------------------------------------------
# policy.ttl
# -----------------------------------------------------------------------


ol:policyText a owl:DatatypeProperty ;
    dc:description """The policy 'small print'"""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string .

# todo : would policyAuthor be better?
ol:defaultAssignee a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
                                 Implicit default assignee of a rule.
                                 """@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:Party .

ol:digitalPolicyAuthor a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
A field to allow the author of the digital policy - if available this person may be
eventually be contacted to obtain information about the policy.
"""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string .

ol:expires a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
Optional expiry date of the policy.
The policy is not considered valid after this date.
"""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:dateTime .

ol:policyDescription a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """A short description of the policy - usable to give a user rapidly information about the policy."""@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf dc:description .

ol:sharedDuties a owl:ObjectProperty ;
    dc:description """
                                 Duties that are shared by all Permissions in this policy.
                                 """@en ;
    rdfs:domain ol:Policy ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range odrl:Duty .

ol:Policy a [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:policyDescription ],
        [ a owl:Restriction ;
            owl:allValuesFrom odrl:Duty ;
            owl:onProperty odrl:duty ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Party ;
            owl:maxCardinality 1 ;
            owl:onProperty odrl:assignee ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Asset ;
            owl:maxCardinality 1 ;
            owl:onProperty odrl:target ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:expires ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:digitalPolicyAuthor ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:Party ;
            owl:maxCardinality 1 ;
            owl:onProperty odrl:assigner ],
        owl:Class ;
    rdfs:label "Policy"^^xsd:string ;
    dc:description """
An ODRL policy representing an agreement or a potential agreement.

Policy is the central entity that holds an ODRL policy together. In its encoded form, e.g. in an XML document, it makes the policy addressable from the outside word via its uid attribute. Policy can refer to Permissions and Prohibitions.
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf odrl:Policy .


# -----------------------------------------------------------------------
# set.ttl
# -----------------------------------------------------------------------

ol:chosen_sequentially a ol:AssetSetSamplePolicy,
        skos:Concept ;
    dc:description "chosen according to a predefined order"@en ;
    skos:inScheme ol:AssetSetSamplePolicies ;
    skos:name "chosen_sequentially"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:pointing_from a ol:AssetSetEdgeDirection,
        skos:Concept ;
    dc:description "Point from the element to the target_object"@en ;
    skos:inScheme ol:AssetSetEdgeDirections ;
    skos:name "pointing_from"@en ;
    skos:narrowerThan ol:any_edge_direction .

ol:pointing_to a ol:AssetSetEdgeDirection,
        skos:Concept ;
    dc:description "Point from the target_object to the element"@en ;
    skos:inScheme ol:AssetSetEdgeDirections ;
    skos:name "pointing_to"@en ;
    skos:narrowerThan ol:any_edge_direction .

ol:randomly_chosen a ol:AssetSetSamplePolicy,
        skos:Concept ;
    dc:description "chosen in an arbitrary manner not controller by assignee or assigner"@en ;
    skos:inScheme ol:AssetSetSamplePolicies ;
    skos:name "randomly_chosen"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:selected_by_assignee a ol:AssetSetSamplePolicy,
        skos:Concept ;
    dc:description "chosen by the assignee party"@en ;
    skos:inScheme ol:AssetSetSamplePolicies ;
    skos:name "selected_by_assignee"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:selected_by_assigner a ol:AssetSetSamplePolicy,
        skos:Concept ;
    dc:description "chosen by the assigner party"@en ;
    skos:inScheme ol:AssetSetSamplePolicies ;
    skos:name "selected_by_assigner"@en ;
    skos:narrowerThan ol:any_sample_policy .

ol:count a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
Default value is 1.
"""@en ;
    rdfs:domain ol:AssetSelector ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:integer .

ol:edgeDirection a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
Indicates in which direction the predicate is used to connect elements to the set target_object.
Default is ol:pointing_to.
"""@en ;
    rdfs:domain ol:AssetSet ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:AssetSetEdgeDirection .

ol:fromSet a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
The set asset can be picked from.
"""@en ;
    rdfs:domain ol:AssetSelector ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:AssetSet .

ol:hasElement a owl:ObjectProperty ;
    rdfs:domain ol:AssetSet ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range owl:Thing .

ol:predicate a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
Indicates which predicate is used to Indicate that element belong to a set.
"""@en ;
    rdfs:domain ol:AssetSet ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range owl:ObjectProperty .

ol:samplePolicy a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
The way asset are selected. Default is selected_by_assignee.
"""@en ;
    rdfs:domain ol:AssetSelector ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range ol:AssetSetSamplePolicy .

ol:selectRequired a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    dc:description """
True if it is required to select an element on agreement of the policy.
"""@en ;
    rdfs:domain ol:AssetSelector ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range xsd:boolean .

ol:targetObject a owl:FunctionalProperty,
        owl:ObjectProperty ;
    dc:description """
Indicates the entity that the elements must connect to through the predicate in order to be part of the set.
Default is the AssetSet instance itself.
"""@en ;
    rdfs:domain ol:AssetSet ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:range owl:Thing .

ol:AssetSetEdgeDirections a skos:ConceptScheme ;
    skos:ConceptScheme_hasTopConcept ol:any_edge_direction .

ol:any_edge_direction a ol:AssetSetEdgeDirection,
        skos:Concept ;
    skos:inScheme ol:AssetSetEdgeDirections ;
    skos:name "any_edge_direction"@en .

ol:AssetSelector a [ a owl:Restriction ;
            owl:cardinality 1 ;
            owl:onProperty ol:selectRequired ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:AssetSetSamplePolicy ;
            owl:cardinality 1 ;
            owl:onProperty ol:samplePolicy ],
        [ a owl:Restriction ;
            owl:cardinality 1 ;
            owl:onProperty ol:count ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:AssetSet ;
            owl:cardinality 1 ;
            owl:onProperty ol:fromSet ],
        owl:Class ;
    rdfs:label "AssetSelector"^^xsd:string ;
    dc:description """
An asset that is actually sampled from a set. An AssetSetSample must indicate the set asset must be selected from, m
ay contain a sample policy,  and may contain the number of assets that should be sampled.
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf ol:Asset .

ol:AssetSetEdgeDirection a owl:Class ;
    rdfs:label "AssetSetEdgeDirection"^^xsd:string ;
    dc:description """
Indicates if the predicate used to connect the set to its elements,
are "pointing to" the elements or "pointing from" the elements 
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> .

ol:AssetSetSamplePolicies a skos:ConceptScheme ;
    skos:ConceptScheme_hasTopConcept ol:any_sample_policy .

ol:any_sample_policy a ol:AssetSetSamplePolicy,
        skos:Concept ;
    skos:inScheme ol:AssetSetSamplePolicies ;
    skos:name "any_sample_policy"@en .

ol:AssetSet a [ a owl:Restriction ;
            owl:allValuesFrom owl:Thing ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:targetObject ],
        [ a owl:Restriction ;
            owl:allValuesFrom ol:AssetSetEdgeDirection ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:edgeDirection ],
        [ a owl:Restriction ;
            owl:allValuesFrom owl:Thing ;
            owl:onProperty ol:hasElement ],
        [ a owl:Restriction ;
            owl:allValuesFrom owl:ObjectProperty ;
            owl:maxCardinality 1 ;
            owl:onProperty ol:predicate ],
        owl:Class ;
    rdfs:label "AssetSet"^^xsd:string ;
    dc:description """
A set defined as the set of element pointing to a target object via a certain predicate.
"""@en,
        """
A set or collection of elements of type elementType
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> ;
    rdfs:subClassOf ol:Asset,
        ol:AssetSet .

ol:AssetSetSamplePolicy a owl:Class ;
    rdfs:label "AssetSetSamplePolicy"^^xsd:string ;
    dc:description """
Indicates the way sampling from a set is done. 
"""@en ;
    rdfs:isDefinedBy <http://openlicensing.org/ns/ol/1.1/> .

